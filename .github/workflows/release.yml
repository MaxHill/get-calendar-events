name: Create Release

on:
  push:
    branches:
      - master

jobs:
  build-mac:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build
        run:  just build

      - name: Compress archive
        run: cd .build/apple/Products/Release && tar -czf get-calendar-events.tar.gz get-calendar-events

      - uses: actions/upload-artifact@v3
        with:
          name: release
          path: |
            .build/apple/Products/Release/get-calendar-events
            .build/apple/Products/Release/get-calendar-events.tar.gz

  bump-version:
    needs: ["build-mac"]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      tag: ${{ steps.tag.outputs.tag }}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'

    - 
      id: tag
      name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.64.0 # Don't use @master or @v1 unless you're happy to test the latest version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # if you don't want to set write permissions use a PAT token
        WITH_V: true


  release:
    needs: ["build-mac", "bump-version"]
    runs-on: macos-latest
    outputs:
      tar-path: ${{ steps.tar.outputs.tar-path }}
      tar-sha: ${{ steps.tar.outputs.tar-sha }}
    steps:

      - uses: actions/download-artifact@v3
        with:
          name: release

      - id: release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{needs.bump-version.outputs.tag}}
          prerelease: false
          # Files get put in root because of download artifact
          files: |
            get-calendar-events
            *.tar.gz


      - name: Build archive (Unix)
        id: tar
        shell: bash
        run: |
          SHA=($(shasum -a 256 'get-calendar-events.tar.gz'))
          echo "tar-sha=$SHA" >> $GITHUB_OUTPUT
          # echo "tar-sha=$(shasum -a 256 'notes-cli.tar.gz' | sed 's/  -//')" >> $GITHUB_OUTPUT
          echo "tar-path=${{ github.server_url }}/${{ github.repository }}/releases/download/${{needs.bump-version.outputs.tag}}/get-calendar-events.tar.gz" >> "$GITHUB_OUTPUT"
  
  publish-to-tap:
    needs: ["release", "bump-version"]
    runs-on: ubuntu-latest
    steps:
      - name: tar
        run: echo "${{needs.release.outputs.tar-path}}"
      - name: sha
        run: echo "${{needs.release.outputs.tar-sha}}"

      - name: Load secret
        id: op-load-secret
        uses: 1password/load-secrets-action@v1
        with:
          export-env: false
        env:
          OP_SERVICE_ACCOUNT_TOKEN: "${{secrets.OP_SERVICE_ACCOUNT_TOKEN}}"
          PAT: "op://homebrew-tap/github-pat/token"

      - name: Trigger publish
        run: |
          curl -XPOST -u "MaxHill:${{ steps.op-load-secret.outputs.PAT }}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/MaxHill/homebrew-tap/dispatches --data '{"event_type": "build_application", "client_payload": { "tar-path": "${{needs.release.outputs.tar-path}}", "tar-sha": "${{needs.release.outputs.tar-sha}}", "version": "${{needs.bump-version.outputs.tag}}", "formula": "get-calendar-events"}}'

